#!/usr/bin/python -O


import os
import time
import json
from bottle import Bottle, request, response, template, static_file
from bottle.ext.websocket import GeventWebSocketServer, websocket
from getter import Getter


def now():
    return time.strftime("%Y-%m-%d %H:%M:%S", time.localtime())


def get_qpidmsg(ws):

    class Producer(object):
        """ a wrapper for websocket """
        def __init__(self, ws):
            self.__ws = ws

        def send(self, rkey, content):
            self.__ws.send('{0} - {1}'.format(now(), rkey))

    print ws
    exchange = 'amq.topic'
    getter = None
    while True:
        msg = ws.receive()
        if msg is not None:
            msg = json.loads(msg)
            op = msg.get('op')
            if op == 'start':
                if getter is None:
                    try:
                        getter = Getter('{0}:{1}'.format(msg['host'], msg['port']),
                                        exchange, [msg['key']],
                                        brief=True, producer=Producer(ws))
                        getter.start()
                    except Exception as exp:
                        ws.send(exp.message)
                        ws.send('reset')

            elif op == 'stop':
                if getter:
                    getter.stop()
                getter = None
        else:
            break



app = Bottle()

@app.route("/")
def start():
    return template("qpidmsg", title="Qpid Messages",
                               host=request.headers['Host'])


@app.get("/websocket", apply=[websocket])
def echo(ws):
    get_qpidmsg(ws)


@app.route("/lib/<filename:path>")
def callback(filename):
    return static_file(filename, root=os.path.join(os.getcwd(), 'static_file'))


if __name__ == '__main__':

    from optparse import OptionParser
    parser = OptionParser()
    parser.add_option('-b', '--bindingip', dest = 'ip', 
          action='store', default='127.0.0.1',
          help='ip address for binding')

    (opts, _args) = parser.parse_args()

    port = 9000
    app.run(host=opts.ip, port=port, server=GeventWebSocketServer)
